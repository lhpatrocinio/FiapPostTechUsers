name: CD - Deploy to Azure App Service

on:
  push:
    branches:
      - main
      
permissions:
  id-token: write
  contents: read
  
jobs:
  build-publish-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repositório
        uses: actions/checkout@v4

      - name: Instalar .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restaurar pacotes
        run: dotnet restore src/Users.Api/Users.Api.csproj

      - name: Compilar projeto
        run: dotnet build src/Users.Api/Users.Api.csproj --configuration Release --no-restore

      - name: Publicar projeto
        run: dotnet publish src/Users.Api/Users.Api.csproj -c Release -o ${{ github.workspace }}/publish
      
      - name: Instalar dotnet-ef CLI
        run: dotnet tool install --global dotnet-ef

      - name: Adicionar ferramentas globais ao PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Aplicar scripts de migração
        run: dotnet ef database update --project src/Users.Infrastructure/Users.Infrastructure.csproj
        env:
          ConnectionStrings__DefaultConnection: ${{ secrets.CONNECTION_STRING }}
          
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}       
          
      - name: Login no Azure Container Registry (ACR)
        run: echo "${{ secrets.ACR_PASSWORD }}" | docker login acrinfiniteloops.azurecr.io -u ${{ secrets.ACR_USERNAME }} --password-stdin
        
      - name: Build da imagem
        run: docker build -t acrinfiniteloops.azurecr.io/fiap.post.tech.users:latest -f src/Users.Api/Dockerfile FiapPostTechUsers

      - name: Push da imagem
        run: docker push acrinfiniteloops.azurecr.io/fiap.post.tech.users:latest    
